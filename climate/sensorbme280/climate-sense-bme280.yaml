substitutions:
  name: climate-sense-bmp280
  friendly_name: Temp Humidity Pressure Sensor

esphome:
  name: "${name}"
  name_add_mac_suffix: true
  platform: ESP8266
  board: wio_node

  on_boot:
    priority: -10
    then:
      - output.turn_on: grove_power

  project:
    name: esphome.climate-sense-bme280
    version: "0.7"

packages:
  esphome."climate-sense-bmp280": 
    url: https://github.com/jonnywifi/esphome
    ref: main
    files: [climate/sensorbme280/climate-sense-bme280.yaml]
    refresh: 0d

# Enable logging
logger:
  level: WARN  # Reduce logging level

# Enable Home Assistant API
api:

i2c:
  sda: D2
  scl: D1
  scan: false

ota:
  - platform: esphome
    id: my_ota
    safe_mode: true
    password: !secret ota_password
    on_begin:
      then:
        - deep_sleep.prevent: deep_sleep_control

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: light  # Enable Wi-Fi power save mode

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${name}
    password: "12345678"

captive_portal:

# Sleep to reduce the thermal impact of the MCU so close to the sensor
deep_sleep:
  id: deep_sleep_control
  run_duration: 20s  # Reduce active duration
  sleep_duration: 3min  # Increase sleep duration

sensor:
  - platform: bme280_i2c
    temperature:
      name: "${name} Temperature"
      oversampling: 16x
    pressure:
      name: "${name} Pressure"
      oversampling: 16x
    humidity:
      name: "${name} Humidity"
      oversampling: 16x
    address: 0x76
    update_interval: 180s  # Adjust to match sleep duration

output:
  - platform: gpio
    pin: 15
    inverted: false
    id: grove_power

interval:
  - interval: 60s
    then:
      - lambda: |-
          if (id(my_ota).status() != OTA_IDLE) {
            id(deep_sleep_control).turn_off();
          } else {
            id(deep_sleep_control).turn_on();
          }
