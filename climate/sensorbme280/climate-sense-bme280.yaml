substitutions:
  name: climate-sense-bmp280
  friendly_name: Temp Humidity Pressure Sensor

esphome:
  name: "${name}"
  name_add_mac_suffix: true
  platform: ESP8266
  board: wio_node

  on_boot:
    priority: 1001
    then:
      - output.turn_on: grove_power
      # - delay: 5s  # Wait a few seconds to ensure Home Assistant is ready
      # - homeassistant.service:
      #     service: homeassistant.update_entity
      #     data:
      #       entity_id: input_boolean.block_esphome_sleep
  #     - lambda: |-
  #         if (id(block_sleep_state).state == "on") {
  #           id(deep_sleep_control).prevent();
  #           ESP_LOGD("main", "Deep sleep is prevented due to Block ESPHome Sleep being ON.");
  #         } else {
  #           ESP_LOGD("main", "Deep sleep is allowed.");
  #         }
      - wait_until:
        - api.connected
      - delay: 5s

  project:
    name: esphome.climate-sense-bme280
    version: "0.7"

# Enable logging
logger:
  level: DEBUG # WARN  # Reduce logging level

# Enable Home Assistant API
api:

text_sensor:
  - platform: homeassistant
    name: "Block ESPHome Sleep State"
    id: block_sleep_state
    entity_id: input_boolean.block_esphome_sleep

i2c:
  # sda: D2
  # scl: D1
  scan: true

# Uncomment the OTA section to enable OTA updates
ota:
  platform: esphome
  password: !secret ota_password
  # on_begin:
  #   then:
  #     - deep_sleep.prevent: deep_sleep_control
  # on_end:
  #   then:
  #     - deep_sleep.allow: deep_sleep_control

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  power_save_mode: light  # Enable Wi-Fi power save mode

#   # Enable fallback hotspot (captive portal) in case wifi connection fails
#   ap:
#     ssid: ${name}
#     password: "12345678"

# captive_portal:

# Sleep to reduce the thermal impact of the MCU so close to the sensor
# deep_sleep:
#   id: deep_sleep_control
#   run_duration: 20s  # Reduce active duration
#   sleep_duration: 3min  # Increase sleep duration

sensor:
  - platform: bme280_i2c
    temperature:
      name: "${name} Temperature"
      oversampling: 16x
    pressure:
      name: "${name} Pressure"
      oversampling: 16x
    humidity:
      name: "${name} Humidity"
      oversampling: 16x
    address: 0x76
    update_interval: 15s  # Adjust to match sleep duration
    # icon: 'mdi:signal'
    # unit_of_measurement: 'm'
  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: bme280_temperature
    humidity: bme280_humidity
  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: Â°F
    icon: 'mdi:thermometer-alert'

output:
  - platform: gpio
    pin: 15
    inverted: false
    id: grove_power
